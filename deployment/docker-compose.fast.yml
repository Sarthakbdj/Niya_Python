version: '3.8'

services:
  # Optimized Local Letta Server for Fast Responses
  letta-fast:
    image: letta/letta:latest
    container_name: niya-letta-fast
    ports:
      - "8283:8283"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LETTA_SERVER_HOST=0.0.0.0
      - LETTA_SERVER_PORT=8283
      - LETTA_PG_HOST=postgres-fast
      - LETTA_PG_PORT=5432
      - LETTA_PG_USER=letta
      - LETTA_PG_PASSWORD=letta
      - LETTA_PG_DB=letta
      # Performance optimizations
      - LETTA_AGENT_CACHE_SIZE=100
      - LETTA_MAX_WORKERS=4
      - LETTA_MEMORY_BACKEND=postgres
    depends_on:
      postgres-fast:
        condition: service_healthy
    volumes:
      - letta_fast_data:/app/data
      - letta_fast_cache:/app/cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8283/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    # Resource limits for better performance
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Optimized PostgreSQL for Letta
  postgres-fast:
    image: postgres:15-alpine
    container_name: niya-postgres-fast
    environment:
      - POSTGRES_DB=letta
      - POSTGRES_USER=letta
      - POSTGRES_PASSWORD=letta
      # Performance optimizations
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=200
      - POSTGRES_SHARED_BUFFERS=256MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=1GB
      - POSTGRES_MAINTENANCE_WORK_MEM=64MB
      - POSTGRES_CHECKPOINT_COMPLETION_TARGET=0.9
      - POSTGRES_WAL_BUFFERS=16MB
      - POSTGRES_DEFAULT_STATISTICS_TARGET=100
    volumes:
      - letta_fast_pgdata:/var/lib/postgresql/data
      - ./postgres-fast.conf:/etc/postgresql/postgresql.conf
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U letta -d letta"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Niya Bridge Service (Optimized)
  niya-bridge:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.bridge
    container_name: niya-bridge-fast
    ports:
      - "1511:1511"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LETTA_BASE_URL=http://letta-fast:8283
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      # Performance optimizations
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    depends_on:
      letta-fast:
        condition: service_healthy
    volumes:
      - ../core:/app/core
      - ../.env:/app/.env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1511/health"]
      interval: 15s
      timeout: 5s
      retries: 3
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Optional: Direct Chat Interface (Optimized)
  niya-chat:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.chat
    container_name: niya-chat-fast
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LETTA_BASE_URL=http://letta-fast:8283
      - FASTAPI_ENV=production
    depends_on:
      letta-fast:
        condition: service_healthy
    volumes:
      - ../chat:/app/chat
      - ../core:/app/core
      - ../.env:/app/.env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/agent-info"]
      interval: 15s
      timeout: 5s
      retries: 3
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis for Caching (Optional but recommended for speed)
  redis-cache:
    image: redis:7-alpine
    container_name: niya-redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_cache_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  letta_fast_pgdata:
    driver: local
  letta_fast_data:
    driver: local
  letta_fast_cache:
    driver: local
  redis_cache_data:
    driver: local

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 